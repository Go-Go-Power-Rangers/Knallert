on:
  issues:
    types: edited
  issue_comment:
    types: edited

jobs:
  issue_edited:
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            const issueNum = context.payload.issue.number;
            const tasks = context.payload.issue.body.match(/(- \[[x]\].+)/g);
            if(!tasks) { return; }
            tasks.length < 2 ? console.log("less than 2 selected") : console.log("2 selected");
            var fs = require('fs');
            fs.readdir('./', (err, files) => {
              files.forEach(file => {
                console.log(file)
              });
            });
            fs.readFile('../internal-roles/qp-support.md', (err, data) => {console.log(data)});
            


  issue_comment_edited:
    if: github.event_name == 'issue_comment'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            console.log(context)
            const issueNum = context.payload.issue.number;
            const sender = context.payload.sender.login;
            const tasksBefore = context.payload.changes.body.from.match(/(- \[[x\s]\].+)/g);
            const tasksAfter = context.payload.issue.body.match(/(- \[[x\s]\].+)/g);
            if(!tasksAfter) { return; }
            
            let updatedTasks = [];
            for(let task of tasksAfter) {
              if (!tasksBefore) { 
                continue;
              } else if(!tasksBefore.includes(task)) {
                let taskStatus = task.includes("[x]") ? "complete" : "incomplete";
                updatedTasks.push(`@${sender} marked the checklist item **${task.substring(5).trim()}** as ${taskStatus}`);
              }
            }
            
            if(updatedTasks.length == 0) { return; }
            console.log("Updated tasks: " + updatedTasks);
            const { repo: { owner, repo }  } = context;
            github.rest.issues.createComment({ issue_number: issueNum, owner, repo, body: updatedTasks.join("\n") });
  
  event_info:
    runs-on: ubuntu-latest
    steps:
      - name: github
        run: echo '${{ toJSON(github) }}'
      - name: event name
        run: echo '${{ github.event_name }}'
    
